# This file contains .gitignore rules that are often used with Drupal projects.
# Because .gitignore is specific to your site and its deployment processes, you
# may need to uncomment, add, or remove rules.
#
# To ignore all paths that composer manages when using this project template,
# remove all double-hashed (##) lines.


# Ignore configuration files that may contain sensitive information.
#
# Typically, settings.php and related files are not committed to the
# repository because they contain information such as the database
# credentials that could be used to compromise a site. Sometimes,
# a settings.php might be committed to the repository if it reads
# sensitive information from environment variables or other sources.
# ------------------------------------------------------------------
/web/sites/*/services*.yml
!/web/sites/default/services.yml

# Ignore paths that contain user-generated content.
/web/sites/*/files
/web/sites/*/private
/private-files/webform/

# Ignore SimpleTest multi-site environment.
/web/sites/simpletest


# Ignore custom modules managed by Composer.
#
# When a development team creates one or more custom modules that
# are intended for use on more than one site, the typical strategy
# is to register them in Packagist and give them the type
# `drupal-custom-module` instead of `drupal-module`. This will cause
# Composer to install them to the directory `modules/custom`.
#
# An alternate strategy for custom modules is to commit them
# directly to the repository of the site where they are used. This
# is commonly done with modules that are specific to just one site.
#
# Sites that have both Composer-managed custom modules and custom
# modules that are committed directly to the repository may ignore
# the `modules/custom` directory with the first rule shown below,
# and then allow the locations to be committed on a case-by-case
# basis by re-adding paths using `!` rules. A path that begins with
# a `!` will allow a previously-ignored path to be added to the
# repository. Note, however, that a path cannot be re-added if any
# of its parent directories are excluded. This is why we use the
# rule `/modules/custom/*` instead of `/modules/custom`.
#
# Sites that do not have any Composer-managed custom modules may
# delete all of the `modules/custom` lines below.
# ------------------------------------------------------------------
##/web/modules/custom/*
#!/web/modules/custom/module_in_repo


# Ignore directories generated by Composer
#
# See the "installer-paths" section in the top-level composer.json
# file.
# ------------------------------------------------------------------
/drush/Commands/contrib/
/web/core/
/web/modules/contrib/
/web/themes/contrib/
/web/profiles/contrib/
/web/libraries/

# Generally you should only ignore the root vendor directory. It's important
# that core/assets/vendor and any other vendor directories within contrib or
# custom module, theme, etc., are not ignored unless you purposely do so.
/vendor/
/node_modules/

# Ignore scaffold files
#
# Note that the scaffold plugin may be used to automatically manage
# a site's .gitignore files. If the `vendor` directory is ignored,
# then one or more .gitignore files will be written to also ignore
# any file placed by scaffolding. To avoid the creation of
# additional .gitignore files, add all of the scaffold file
# locations to the top-level .gitignore file, as shown below.
# ------------------------------------------------------------------
/web/.csslintrc
/web/.editorconfig
/web/.eslintignore
/web/.eslintrc.json
/web/.gitattributes
/web/.ht.router.php
/web/.htaccess
/web/INSTALL.txt
/web/README.txt
/web/autoload.php
/web/example.gitignore
/web/index.php
/web/robots.txt
/web/update.php
/web/web.config
/web/modules/README.txt
/web/profiles/README.txt
/web/sites/README.txt
/web/sites/default/default.services.yml
/web/sites/default/default.settings.php
/web/sites/default/settings.local.php
#/web/sites/development.services.yml
/web/sites/example.settings.local.php
/web/sites/example.sites.php
/web/themes/README.txt

/web/files

# Other common rules
# ------------------
# Ignore files generated by PhpStorm
/.idea/

# Ignore .env files as they are personal
#/.env

# Ignore yarn dependencies in project root
# See https://yarnpkg.com/getting-started/qa#which-files-should-be-gitignored
.pnp.*
.yarn/*
!.yarn/patches
!.yarn/plugins
!.yarn/releases
!.yarn/sdks
!.yarn/versions

# Additional files/folders from local development
/coverage
/build
/backups
sanitised-db.sql.gz
/logs
/reports
# Ignore dotenv
.env

# Mac Files
.DS_Store
test.txt
test.php

*storybook.log

# NO dbs.
*.sql
*.sql.gz
